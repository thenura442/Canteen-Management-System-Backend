{
  "stats": {
    "suites": 7,
    "tests": 49,
    "passes": 49,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-19T06:35:03.780Z",
    "end": "2023-05-19T06:35:22.549Z",
    "duration": 18769,
    "testsRegistered": 49,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "50ff96b5-b6a1-48d3-ab90-63693e4b233f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d9f5f438-0600-4df0-ad8c-61a848ae3e31",
          "title": "Common Routes Tests",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\basic.tests.js",
          "file": "\\tests\\basic.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return server status",
              "fullTitle": "Common Routes Tests should return server status",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get('/')\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
              "err": {},
              "uuid": "d187c267-546a-42a5-a05f-f3636f35a906",
              "parentUUID": "d9f5f438-0600-4df0-ad8c-61a848ae3e31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d187c267-546a-42a5-a05f-f3636f35a906"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "3c6f9681-ed5f-4ce4-a7fe-91913a1367dc",
          "title": "Cart Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\cart.tests.js",
          "file": "\\tests\\cart.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return cart created message as success",
              "fullTitle": "Cart Routes Tests Suite should return cart created message as success",
              "timedOut": false,
              "duration": 4209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/create')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "c337ba1b-6d66-450a-b561-17bb9a61774b",
              "parentUUID": "3c6f9681-ed5f-4ce4-a7fe-91913a1367dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the Cart information of the Customer",
              "fullTitle": "Cart Routes Tests Suite should return the Cart information of the Customer",
              "timedOut": false,
              "duration": 266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get')\n  .send({customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.findObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.findObject.sub_total,res.body.sub_total,err)\n    done();\n});",
              "err": {},
              "uuid": "d673f8fc-b189-4da3-825d-20d21d56deeb",
              "parentUUID": "3c6f9681-ed5f-4ce4-a7fe-91913a1367dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update cart details and return updated cart details",
              "fullTitle": "Cart Routes Tests Suite should update cart details and return updated cart details",
              "timedOut": false,
              "duration": 537,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.updateObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.updateObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.updateObject.sub_total,res.body.sub_total,err)\n    done();\n});",
              "err": {},
              "uuid": "b4422464-d077-40ce-a938-83ecec7fdd7f",
              "parentUUID": "3c6f9681-ed5f-4ce4-a7fe-91913a1367dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart item details and return success",
              "fullTitle": "Cart Routes Tests Suite should delete cart item details and return success",
              "timedOut": false,
              "duration": 579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/item')\n  .send({ id : \"I-AA81881\" , customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "a3ab4078-b0f0-4315-aa64-3f57c78ba28b",
              "parentUUID": "3c6f9681-ed5f-4ce4-a7fe-91913a1367dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart record that was created",
              "fullTitle": "Cart Routes Tests Suite should delete cart record that was created",
              "timedOut": false,
              "duration": 286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete')\n  .send({customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "86b9fb43-1d4c-4f98-9401-27077b1b63de",
              "parentUUID": "3c6f9681-ed5f-4ce4-a7fe-91913a1367dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c337ba1b-6d66-450a-b561-17bb9a61774b",
            "d673f8fc-b189-4da3-825d-20d21d56deeb",
            "b4422464-d077-40ce-a938-83ecec7fdd7f",
            "a3ab4078-b0f0-4315-aa64-3f57c78ba28b",
            "86b9fb43-1d4c-4f98-9401-27077b1b63de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5877,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
          "title": "Customer Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\customer.tests.js",
          "file": "\\tests\\customer.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return customer email needs to be valid",
              "fullTitle": "Customer Routes Tests Suite should return customer email needs to be valid",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"email\" must be a valid email',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "1b4949e0-1443-4616-8c2f-c1b9a33ca3e1",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer created message as success",
              "fullTitle": "Customer Routes Tests Suite should return customer created message as success",
              "timedOut": false,
              "duration": 701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "6daf6bbc-2ada-4a66-a022-66771125ac57",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email already exists",
              "fullTitle": "Customer Routes Tests Suite should return that email already exists",
              "timedOut": false,
              "duration": 275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email Already Exists!\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "8bddf657-b42d-4bff-acfe-40516878fb24",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer login as success",
              "fullTitle": "Customer Routes Tests Suite should return customer login as success",
              "timedOut": false,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/mobile')\n  .send({ email : mock.mockLoginObject.email , password : mock.mockLoginObject.password , type : mock.mockLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"tester122@gmail.com\",res.body.email,err)\n    done();\n});",
              "err": {},
              "uuid": "8af2ddb7-003e-42ba-812f-effc3822d490",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer login as Incorrect Username or Password",
              "fullTitle": "Customer Routes Tests Suite should return customer login as Incorrect Username or Password",
              "timedOut": false,
              "duration": 358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/mobile')\n  .send({ email : mock.mockFalseLoginObject.email , password : mock.mockFalseLoginObject.password , type : mock.mockFalseLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email or Password is Incorrect\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "a0d66fe1-055c-4f4f-bd6a-b68eafaf7c92",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the customer information",
              "fullTitle": "Customer Routes Tests Suite should return the customer information",
              "timedOut": false,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.first_name,res.body.first_name,err)\n    chai.assert.equal(mock.findObject.last_name,res.body.last_name,err)\n    chai.assert.equal(mock.findObject.nic,res.body.nic,err)\n    chai.assert.equal(mock.findObject.dob,res.body.dob,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.address,res.body.address,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    done();\n});",
              "err": {},
              "uuid": "81bb4909-af9f-49b2-8f31-19727e6e9290",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer details and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer details and return success",
              "timedOut": false,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "a71bbc81-57ad-4ca1-9b27-570c6f187c19",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email needs to be valid",
              "fullTitle": "Customer Routes Tests Suite should return that email needs to be valid",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "65768617-926c-4273-9497-4199a74a8cdf",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that mobile number needs 10 characters",
              "fullTitle": "Customer Routes Tests Suite should return that mobile number needs 10 characters",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "12269634-629f-4633-84d2-268260ba2806",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Mobile and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer Mobile and return success",
              "timedOut": false,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/mobile')\n  .send({ email : \"tester122@gmail.com\" , mobile_no : \"0771193382\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "382352ff-a400-4988-9cc7-2d1706d2af43",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Password and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer Password and return success",
              "timedOut": false,
              "duration": 718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/password')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester123\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "02d21d0d-8cc1-469f-83db-91dc2fa80d53",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer Old Password is not valid",
              "fullTitle": "Customer Routes Tests Suite should return customer Old Password is not valid",
              "timedOut": false,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/password')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester12345\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Please Enter the Valid Old Password\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "b0ee279d-b708-4a51-b25d-f32b7c203c80",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete customer record that was created",
              "fullTitle": "Customer Routes Tests Suite should delete customer record that was created",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "b7ce49e6-94e8-4f71-97dc-d52fbc36e867",
              "parentUUID": "b0055c13-dada-42d6-a924-97c1f8f6b4bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b4949e0-1443-4616-8c2f-c1b9a33ca3e1",
            "6daf6bbc-2ada-4a66-a022-66771125ac57",
            "8bddf657-b42d-4bff-acfe-40516878fb24",
            "8af2ddb7-003e-42ba-812f-effc3822d490",
            "a0d66fe1-055c-4f4f-bd6a-b68eafaf7c92",
            "81bb4909-af9f-49b2-8f31-19727e6e9290",
            "a71bbc81-57ad-4ca1-9b27-570c6f187c19",
            "65768617-926c-4273-9497-4199a74a8cdf",
            "12269634-629f-4633-84d2-268260ba2806",
            "382352ff-a400-4988-9cc7-2d1706d2af43",
            "02d21d0d-8cc1-469f-83db-91dc2fa80d53",
            "b0ee279d-b708-4a51-b25d-f32b7c203c80",
            "b7ce49e6-94e8-4f71-97dc-d52fbc36e867"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3980,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
          "title": "Employee Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\employee.tests.js",
          "file": "\\tests\\employee.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return customer email needs to be valid",
              "fullTitle": "Employee Routes Tests Suite should return customer email needs to be valid",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"email\" must be a valid email',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "4d11be59-6d5e-4942-a6bc-2ecb62c0c028",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee created message as success",
              "fullTitle": "Employee Routes Tests Suite should return employee created message as success",
              "timedOut": false,
              "duration": 627,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "630ad372-9269-455d-91a9-c9eb5073df62",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email already exists",
              "fullTitle": "Employee Routes Tests Suite should return that email already exists",
              "timedOut": false,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email Already Exists!\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "0caa463e-8faf-4c02-8851-a714a7a40273",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee login as success",
              "fullTitle": "Employee Routes Tests Suite should return employee login as success",
              "timedOut": false,
              "duration": 371,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/web')\n  .send({ email : mock.mockLoginObject.email , password : mock.mockLoginObject.password , type : mock.mockLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"tester122@gmail.com\",res.body.email,err)\n    done();\n});",
              "err": {},
              "uuid": "8d3023da-113d-4167-9c62-de99eebab180",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee login as Incorrect Username or Password",
              "fullTitle": "Employee Routes Tests Suite should return employee login as Incorrect Username or Password",
              "timedOut": false,
              "duration": 355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/web')\n  .send({ email : mock.mockFalseLoginObject.email , password : mock.mockFalseLoginObject.password , type : mock.mockFalseLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email or Password is Incorrect\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "097f4861-672b-4e81-8a5f-f93838bee16e",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the customer information",
              "fullTitle": "Employee Routes Tests Suite should return the customer information",
              "timedOut": false,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.first_name,res.body.first_name,err)\n    chai.assert.equal(mock.findObject.last_name,res.body.last_name,err)\n    chai.assert.equal(mock.findObject.nic,res.body.nic,err)\n    chai.assert.equal(mock.findObject.dob,res.body.dob,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.address,res.body.address,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    chai.assert.equal(mock.findObject.type,res.body.type,err)\n    chai.assert.equal(mock.findObject.vendor,res.body.vendor,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    done();\n});",
              "err": {},
              "uuid": "c9c418f4-8257-4577-b611-3f9ebcb21a46",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer details and return success",
              "fullTitle": "Employee Routes Tests Suite should update customer details and return success",
              "timedOut": false,
              "duration": 266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "1eb8ccc8-a68a-422a-b68f-2bde4c3ee73f",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email needs to be valid",
              "fullTitle": "Employee Routes Tests Suite should return that email needs to be valid",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "5a12535c-55a1-478e-9bc2-d290ddc65d66",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Password and return success",
              "fullTitle": "Employee Routes Tests Suite should update customer Password and return success",
              "timedOut": false,
              "duration": 724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/pass')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester123\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "cd15835b-11d0-4f4a-9949-ddc24ab92176",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer Old Password is not valid",
              "fullTitle": "Employee Routes Tests Suite should return customer Old Password is not valid",
              "timedOut": false,
              "duration": 358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/pass')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester12345\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Please Enter the Valid Old Password\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "40900071-98ce-4ff0-9e16-188d5c75f5dd",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete customer record that was created",
              "fullTitle": "Employee Routes Tests Suite should delete customer record that was created",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "eaaf6264-2782-4795-8669-677ff4752f99",
              "parentUUID": "d36b897c-d18d-410e-9e86-16e8ce1636ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d11be59-6d5e-4942-a6bc-2ecb62c0c028",
            "630ad372-9269-455d-91a9-c9eb5073df62",
            "0caa463e-8faf-4c02-8851-a714a7a40273",
            "8d3023da-113d-4167-9c62-de99eebab180",
            "097f4861-672b-4e81-8a5f-f93838bee16e",
            "c9c418f4-8257-4577-b611-3f9ebcb21a46",
            "1eb8ccc8-a68a-422a-b68f-2bde4c3ee73f",
            "5a12535c-55a1-478e-9bc2-d290ddc65d66",
            "cd15835b-11d0-4f4a-9949-ddc24ab92176",
            "40900071-98ce-4ff0-9e16-188d5c75f5dd",
            "eaaf6264-2782-4795-8669-677ff4752f99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3556,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "cb6d34b5-93ab-4dce-8b6a-4434206d531e",
          "title": "Item Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\item.tests.js",
          "file": "\\tests\\item.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return item description needs to be atleast 6 letters long",
              "fullTitle": "Item Routes Tests Suite should return item description needs to be atleast 6 letters long",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"description\" length must be at least 6 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "d8b36e25-f304-42ee-9a7e-638dd76bf3c5",
              "parentUUID": "cb6d34b5-93ab-4dce-8b6a-4434206d531e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return item created message as success and its ID",
              "fullTitle": "Item Routes Tests Suite should return item created message as success and its ID",
              "timedOut": false,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "238cc90d-e247-4678-bf63-0e532121632f",
              "parentUUID": "cb6d34b5-93ab-4dce-8b6a-4434206d531e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the item information",
              "fullTitle": "Item Routes Tests Suite should return the item information",
              "timedOut": false,
              "duration": 277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({id : \"I-121212_Test\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.id,res.body.id,err)\n    chai.assert.equal(mock.findObject.item_name,res.body.item_name,err)\n    chai.assert.equal(mock.findObject.vendor,res.body.vendor,err)\n    chai.assert.equal(mock.findObject.description,res.body.description,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    chai.assert.equal(mock.findObject.type,res.body.type,err)\n    chai.assert.equal(mock.findObject.meal_type,res.body.meal_type,err)\n    chai.assert.equal(mock.findObject.price,res.body.price,err)\n    chai.assert.equal(mock.findObject.availability,res.body.availability,err)\n    done();\n});",
              "err": {},
              "uuid": "16c96b5f-dd4f-4473-9ea0-779da5f3f4e2",
              "parentUUID": "cb6d34b5-93ab-4dce-8b6a-4434206d531e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the search List including only the test item",
              "fullTitle": "Item Routes Tests Suite should return the search List including only the test item",
              "timedOut": false,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/search/list')\n  .send({search : \"Test Item Name\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length ,err)\n    done();\n});",
              "err": {},
              "uuid": "7c9ff259-686f-447a-ab71-5826871636d5",
              "parentUUID": "cb6d34b5-93ab-4dce-8b6a-4434206d531e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update item details and return success",
              "fullTitle": "Item Routes Tests Suite should update item details and return success",
              "timedOut": false,
              "duration": 559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "0d366df6-3f63-4e62-8040-ab2240b780ad",
              "parentUUID": "cb6d34b5-93ab-4dce-8b6a-4434206d531e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete Item record that was created",
              "fullTitle": "Item Routes Tests Suite should delete Item record that was created",
              "timedOut": false,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({id : \"I-121212_Test\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "99f1693b-b40c-4e5c-a838-75fff1845580",
              "parentUUID": "cb6d34b5-93ab-4dce-8b6a-4434206d531e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8b36e25-f304-42ee-9a7e-638dd76bf3c5",
            "238cc90d-e247-4678-bf63-0e532121632f",
            "16c96b5f-dd4f-4473-9ea0-779da5f3f4e2",
            "7c9ff259-686f-447a-ab71-5826871636d5",
            "0d366df6-3f63-4e62-8040-ab2240b780ad",
            "99f1693b-b40c-4e5c-a838-75fff1845580"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1654,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "ddfea7b4-61ca-42f0-a78a-a31d75d983f0",
          "title": "Order Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\order.tests.js",
          "file": "\\tests\\order.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return Order created message as success",
              "fullTitle": "Order Routes Tests Suite should return Order created message as success",
              "timedOut": false,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/create')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "1fce9229-2536-44de-9f39-eaa3026811a5",
              "parentUUID": "ddfea7b4-61ca-42f0-a78a-a31d75d983f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the Order information",
              "fullTitle": "Order Routes Tests Suite should return the Order information",
              "timedOut": false,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({id : \"Test_O-23443933\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.findObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.findObject.total,res.body.total,err)\n    done();\n});",
              "err": {},
              "uuid": "09e36676-4109-4c6d-8310-657e9b2ae758",
              "parentUUID": "ddfea7b4-61ca-42f0-a78a-a31d75d983f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return all the Orders of the Test Store",
              "fullTitle": "Order Routes Tests Suite should return all the Orders of the Test Store",
              "timedOut": false,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get')\n  .send({store_email : \"teststore@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length,err)\n    done();\n});",
              "err": {},
              "uuid": "e8429f98-8c27-458a-a22d-c0fefd666eab",
              "parentUUID": "ddfea7b4-61ca-42f0-a78a-a31d75d983f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return all the Orders of the Customer",
              "fullTitle": "Order Routes Tests Suite should return all the Orders of the Customer",
              "timedOut": false,
              "duration": 275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/user/orders')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length,err)\n    done();\n});",
              "err": {},
              "uuid": "725176df-ec03-4587-af76-56a7c067ef42",
              "parentUUID": "ddfea7b4-61ca-42f0-a78a-a31d75d983f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update order status and return success message",
              "fullTitle": "Order Routes Tests Suite should update order status and return success message",
              "timedOut": false,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/status')\n  .send({id : \"Test_O-23443933\" , status : \"in progress\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "5c78b26f-4d59-46be-b8bd-bcb4b803bcc7",
              "parentUUID": "ddfea7b4-61ca-42f0-a78a-a31d75d983f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update order details and return success message",
              "fullTitle": "Order Routes Tests Suite should update order details and return success message",
              "timedOut": false,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/status')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "fe7fab07-5dd4-4471-96ab-ebd111d8a976",
              "parentUUID": "ddfea7b4-61ca-42f0-a78a-a31d75d983f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart record that was created",
              "fullTitle": "Order Routes Tests Suite should delete cart record that was created",
              "timedOut": false,
              "duration": 275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({id : \"Test_O-23443933\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "1e2eddc8-c05e-4cc4-8b1b-c1ee2157e055",
              "parentUUID": "ddfea7b4-61ca-42f0-a78a-a31d75d983f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fce9229-2536-44de-9f39-eaa3026811a5",
            "09e36676-4109-4c6d-8310-657e9b2ae758",
            "e8429f98-8c27-458a-a22d-c0fefd666eab",
            "725176df-ec03-4587-af76-56a7c067ef42",
            "5c78b26f-4d59-46be-b8bd-bcb4b803bcc7",
            "fe7fab07-5dd4-4471-96ab-ebd111d8a976",
            "1e2eddc8-c05e-4cc4-8b1b-c1ee2157e055"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1961,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "82cc056b-2735-4984-9070-497e272fb411",
          "title": "Vendor Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\vendor.tests.js",
          "file": "\\tests\\vendor.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return Vendor description needs to be atleast 6 letters long",
              "fullTitle": "Vendor Routes Tests Suite should return Vendor description needs to be atleast 6 letters long",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"description\" length must be at least 6 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "0141593c-8476-4a5f-a9b1-97ae705a973d",
              "parentUUID": "82cc056b-2735-4984-9070-497e272fb411",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return vendor created message as success",
              "fullTitle": "Vendor Routes Tests Suite should return vendor created message as success",
              "timedOut": false,
              "duration": 558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "9fc3a715-bcb9-47ca-b7a7-d4339e553a86",
              "parentUUID": "82cc056b-2735-4984-9070-497e272fb411",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the vendor information",
              "fullTitle": "Vendor Routes Tests Suite should return the vendor information",
              "timedOut": false,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"teststore@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.vendor_name,res.body.vendor_name,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.description,res.body.description,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    done();\n});",
              "err": {},
              "uuid": "e15324f9-c1ef-4255-a2d3-a49f4afd4f0a",
              "parentUUID": "82cc056b-2735-4984-9070-497e272fb411",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should update vendor record that was created",
              "timedOut": false,
              "duration": 536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "e1a6ca41-502f-4253-9307-7c02a19b4e8c",
              "parentUUID": "82cc056b-2735-4984-9070-497e272fb411",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should recieve invalid mobile when updating vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should recieve invalid mobile when updating vendor record that was created",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "dbde304b-fa9e-4b47-a0c0-6958d87366b4",
              "parentUUID": "82cc056b-2735-4984-9070-497e272fb411",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should delete vendor record that was created",
              "timedOut": false,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"teststore@gmail.com\" , url : \"https://canteen-management-system-nsbm.s3.ap-south-1.amazonaws.com/test_store.png\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "6bd60816-c42d-4341-9cb3-2ebe01ec5abe",
              "parentUUID": "82cc056b-2735-4984-9070-497e272fb411",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0141593c-8476-4a5f-a9b1-97ae705a973d",
            "9fc3a715-bcb9-47ca-b7a7-d4339e553a86",
            "e15324f9-c1ef-4255-a2d3-a49f4afd4f0a",
            "e1a6ca41-502f-4253-9307-7c02a19b4e8c",
            "dbde304b-fa9e-4b47-a0c0-6958d87366b4",
            "6bd60816-c42d-4341-9cb3-2ebe01ec5abe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1655,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}