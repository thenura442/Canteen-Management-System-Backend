{
  "stats": {
    "suites": 7,
    "tests": 49,
    "passes": 49,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-15T15:26:25.176Z",
    "end": "2023-05-15T15:26:42.993Z",
    "duration": 17817,
    "testsRegistered": 49,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "744aecb6-8661-4d04-9204-68f0fc46b911",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9ef497bc-2781-45ce-bd7e-93a1e485b6fd",
          "title": "Common Routes Tests",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\basic.tests.js",
          "file": "\\tests\\basic.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return server status",
              "fullTitle": "Common Routes Tests should return server status",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get('/')\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
              "err": {},
              "uuid": "f9349165-958d-4487-a923-5c4d86bf7555",
              "parentUUID": "9ef497bc-2781-45ce-bd7e-93a1e485b6fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9349165-958d-4487-a923-5c4d86bf7555"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b020f97c-8ea7-4721-876f-ff6fced9b8b6",
          "title": "Cart Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\cart.tests.js",
          "file": "\\tests\\cart.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return cart created message as success",
              "fullTitle": "Cart Routes Tests Suite should return cart created message as success",
              "timedOut": false,
              "duration": 4181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/create')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "b5b7c3e5-e4b3-4c0e-addd-eec5c340995f",
              "parentUUID": "b020f97c-8ea7-4721-876f-ff6fced9b8b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the Cart information of the Customer",
              "fullTitle": "Cart Routes Tests Suite should return the Cart information of the Customer",
              "timedOut": false,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get')\n  .send({customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.findObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.findObject.sub_total,res.body.sub_total,err)\n    done();\n});",
              "err": {},
              "uuid": "2dd5c2fa-6119-4b68-85e1-dd753ade784c",
              "parentUUID": "b020f97c-8ea7-4721-876f-ff6fced9b8b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update cart details and return updated cart details",
              "fullTitle": "Cart Routes Tests Suite should update cart details and return updated cart details",
              "timedOut": false,
              "duration": 538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.updateObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.updateObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.updateObject.sub_total,res.body.sub_total,err)\n    done();\n});",
              "err": {},
              "uuid": "319b15b6-6cc5-4396-80fb-c4cb2ac7a38e",
              "parentUUID": "b020f97c-8ea7-4721-876f-ff6fced9b8b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart item details and return success",
              "fullTitle": "Cart Routes Tests Suite should delete cart item details and return success",
              "timedOut": false,
              "duration": 510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/item')\n  .send({ id : \"I-AA81881\" , customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "761b0de2-18f9-4e1f-bcdf-bcf4c3c630c1",
              "parentUUID": "b020f97c-8ea7-4721-876f-ff6fced9b8b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart record that was created",
              "fullTitle": "Cart Routes Tests Suite should delete cart record that was created",
              "timedOut": false,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete')\n  .send({customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "5fc1bda0-852a-42a1-9677-ab4b5a358c9d",
              "parentUUID": "b020f97c-8ea7-4721-876f-ff6fced9b8b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5b7c3e5-e4b3-4c0e-addd-eec5c340995f",
            "2dd5c2fa-6119-4b68-85e1-dd753ade784c",
            "319b15b6-6cc5-4396-80fb-c4cb2ac7a38e",
            "761b0de2-18f9-4e1f-bcdf-bcf4c3c630c1",
            "5fc1bda0-852a-42a1-9677-ab4b5a358c9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5772,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
          "title": "Customer Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\customer.tests.js",
          "file": "\\tests\\customer.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return customer email needs to be valid",
              "fullTitle": "Customer Routes Tests Suite should return customer email needs to be valid",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"email\" must be a valid email',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "74cf3e14-6940-4ac6-b05e-e5cd510ce996",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer created message as success",
              "fullTitle": "Customer Routes Tests Suite should return customer created message as success",
              "timedOut": false,
              "duration": 619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "dd228ee1-e112-4f8d-95eb-0670bb29aefe",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email already exists",
              "fullTitle": "Customer Routes Tests Suite should return that email already exists",
              "timedOut": false,
              "duration": 266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email Already Exists!\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "53a36631-3834-4cb0-ae57-047a6a5cc4d0",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer login as success",
              "fullTitle": "Customer Routes Tests Suite should return customer login as success",
              "timedOut": false,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/mobile')\n  .send({ email : mock.mockLoginObject.email , password : mock.mockLoginObject.password , type : mock.mockLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"tester122@gmail.com\",res.body.email,err)\n    done();\n});",
              "err": {},
              "uuid": "cc8decec-944b-41d3-ad8b-81bc8ed26443",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer login as Incorrect Username or Password",
              "fullTitle": "Customer Routes Tests Suite should return customer login as Incorrect Username or Password",
              "timedOut": false,
              "duration": 338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/mobile')\n  .send({ email : mock.mockFalseLoginObject.email , password : mock.mockFalseLoginObject.password , type : mock.mockFalseLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email or Password is Incorrect\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "f31475d8-8aec-41ce-8c79-d94fc94128aa",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the customer information",
              "fullTitle": "Customer Routes Tests Suite should return the customer information",
              "timedOut": false,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.first_name,res.body.first_name,err)\n    chai.assert.equal(mock.findObject.last_name,res.body.last_name,err)\n    chai.assert.equal(mock.findObject.nic,res.body.nic,err)\n    chai.assert.equal(mock.findObject.dob,res.body.dob,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.address,res.body.address,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    done();\n});",
              "err": {},
              "uuid": "51cf4125-5ca8-4e31-b023-8c59cdfb0728",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer details and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer details and return success",
              "timedOut": false,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "04bfd513-2412-4486-a8e5-c2095e31d78c",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email needs to be valid",
              "fullTitle": "Customer Routes Tests Suite should return that email needs to be valid",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "2f34b713-c511-4bfc-adf6-0c359aab31d6",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that mobile number needs 10 characters",
              "fullTitle": "Customer Routes Tests Suite should return that mobile number needs 10 characters",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "c57a8eef-0209-426d-a69d-d1a9c0fe01da",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Mobile and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer Mobile and return success",
              "timedOut": false,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/mobile')\n  .send({ email : \"tester122@gmail.com\" , mobile_no : \"0771193382\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "12d6e644-3247-48e9-b8b3-da5b1db647c2",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Password and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer Password and return success",
              "timedOut": false,
              "duration": 644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/password')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester123\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "d507df8a-7c8d-4cf6-aaae-5dd23ee2fa9d",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer Old Password is not valid",
              "fullTitle": "Customer Routes Tests Suite should return customer Old Password is not valid",
              "timedOut": false,
              "duration": 349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/password')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester12345\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Please Enter the Valid Old Password\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "074a65be-5cc6-4a9f-8dba-474718292a42",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete customer record that was created",
              "fullTitle": "Customer Routes Tests Suite should delete customer record that was created",
              "timedOut": false,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "9c5dc0fe-6d90-43cf-ac2b-8b9da3c65790",
              "parentUUID": "f63b89a1-01cc-4c47-be4d-9369ef27abca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74cf3e14-6940-4ac6-b05e-e5cd510ce996",
            "dd228ee1-e112-4f8d-95eb-0670bb29aefe",
            "53a36631-3834-4cb0-ae57-047a6a5cc4d0",
            "cc8decec-944b-41d3-ad8b-81bc8ed26443",
            "f31475d8-8aec-41ce-8c79-d94fc94128aa",
            "51cf4125-5ca8-4e31-b023-8c59cdfb0728",
            "04bfd513-2412-4486-a8e5-c2095e31d78c",
            "2f34b713-c511-4bfc-adf6-0c359aab31d6",
            "c57a8eef-0209-426d-a69d-d1a9c0fe01da",
            "12d6e644-3247-48e9-b8b3-da5b1db647c2",
            "d507df8a-7c8d-4cf6-aaae-5dd23ee2fa9d",
            "074a65be-5cc6-4a9f-8dba-474718292a42",
            "9c5dc0fe-6d90-43cf-ac2b-8b9da3c65790"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3660,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "97b182b8-07ab-43d4-885a-20bb12e26a67",
          "title": "Employee Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\employee.tests.js",
          "file": "\\tests\\employee.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return customer email needs to be valid",
              "fullTitle": "Employee Routes Tests Suite should return customer email needs to be valid",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"email\" must be a valid email',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "d7f4e946-bf3c-46e4-8955-a48df0065b5f",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee created message as success",
              "fullTitle": "Employee Routes Tests Suite should return employee created message as success",
              "timedOut": false,
              "duration": 640,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "f8ccf4f4-a952-4408-8d64-60d8717bb7e7",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email already exists",
              "fullTitle": "Employee Routes Tests Suite should return that email already exists",
              "timedOut": false,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email Already Exists!\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "b133067c-58cc-42e1-96da-125df0c7c712",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee login as success",
              "fullTitle": "Employee Routes Tests Suite should return employee login as success",
              "timedOut": false,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/web')\n  .send({ email : mock.mockLoginObject.email , password : mock.mockLoginObject.password , type : mock.mockLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"tester122@gmail.com\",res.body.email,err)\n    done();\n});",
              "err": {},
              "uuid": "709f9c49-066e-4ca6-a63d-ecc8747e3a85",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee login as Incorrect Username or Password",
              "fullTitle": "Employee Routes Tests Suite should return employee login as Incorrect Username or Password",
              "timedOut": false,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/web')\n  .send({ email : mock.mockFalseLoginObject.email , password : mock.mockFalseLoginObject.password , type : mock.mockFalseLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email or Password is Incorrect\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "17e49df4-8885-44dc-9a90-791961a510f4",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the customer information",
              "fullTitle": "Employee Routes Tests Suite should return the customer information",
              "timedOut": false,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.first_name,res.body.first_name,err)\n    chai.assert.equal(mock.findObject.last_name,res.body.last_name,err)\n    chai.assert.equal(mock.findObject.nic,res.body.nic,err)\n    chai.assert.equal(mock.findObject.dob,res.body.dob,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.address,res.body.address,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    chai.assert.equal(mock.findObject.type,res.body.type,err)\n    chai.assert.equal(mock.findObject.vendor,res.body.vendor,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    done();\n});",
              "err": {},
              "uuid": "f73f2e33-56b4-4d14-8b8b-666687b8333b",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer details and return success",
              "fullTitle": "Employee Routes Tests Suite should update customer details and return success",
              "timedOut": false,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "0e31c413-51cc-43e2-9a04-181bf113d112",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email needs to be valid",
              "fullTitle": "Employee Routes Tests Suite should return that email needs to be valid",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "2700f3b6-245a-46e3-a2d7-edee6d54ab74",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Password and return success",
              "fullTitle": "Employee Routes Tests Suite should update customer Password and return success",
              "timedOut": false,
              "duration": 647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/pass')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester123\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "9dc408b7-4afd-465f-8ec4-7c6c7cca5379",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer Old Password is not valid",
              "fullTitle": "Employee Routes Tests Suite should return customer Old Password is not valid",
              "timedOut": false,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/pass')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester12345\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Please Enter the Valid Old Password\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "3c23e935-15be-4ab2-99f4-19df54bf1084",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete customer record that was created",
              "fullTitle": "Employee Routes Tests Suite should delete customer record that was created",
              "timedOut": false,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "b4ac6e04-9c2d-40d4-865c-cfb6852ade2c",
              "parentUUID": "97b182b8-07ab-43d4-885a-20bb12e26a67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7f4e946-bf3c-46e4-8955-a48df0065b5f",
            "f8ccf4f4-a952-4408-8d64-60d8717bb7e7",
            "b133067c-58cc-42e1-96da-125df0c7c712",
            "709f9c49-066e-4ca6-a63d-ecc8747e3a85",
            "17e49df4-8885-44dc-9a90-791961a510f4",
            "f73f2e33-56b4-4d14-8b8b-666687b8333b",
            "0e31c413-51cc-43e2-9a04-181bf113d112",
            "2700f3b6-245a-46e3-a2d7-edee6d54ab74",
            "9dc408b7-4afd-465f-8ec4-7c6c7cca5379",
            "3c23e935-15be-4ab2-99f4-19df54bf1084",
            "b4ac6e04-9c2d-40d4-865c-cfb6852ade2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3402,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "8efc4da5-2a1f-4137-8068-0b590072a9bc",
          "title": "Item Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\item.tests.js",
          "file": "\\tests\\item.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return item description needs to be atleast 6 letters long",
              "fullTitle": "Item Routes Tests Suite should return item description needs to be atleast 6 letters long",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"description\" length must be at least 6 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "06fef046-ba89-4fb2-b5d4-2997aa8c12a4",
              "parentUUID": "8efc4da5-2a1f-4137-8068-0b590072a9bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return item created message as success and its ID",
              "fullTitle": "Item Routes Tests Suite should return item created message as success and its ID",
              "timedOut": false,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "19a13fa4-82db-49fe-97cc-2e00652d9fc6",
              "parentUUID": "8efc4da5-2a1f-4137-8068-0b590072a9bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the item information",
              "fullTitle": "Item Routes Tests Suite should return the item information",
              "timedOut": false,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({id : \"I-121212_Test\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.id,res.body.id,err)\n    chai.assert.equal(mock.findObject.item_name,res.body.item_name,err)\n    chai.assert.equal(mock.findObject.vendor,res.body.vendor,err)\n    chai.assert.equal(mock.findObject.description,res.body.description,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    chai.assert.equal(mock.findObject.type,res.body.type,err)\n    chai.assert.equal(mock.findObject.meal_type,res.body.meal_type,err)\n    chai.assert.equal(mock.findObject.price,res.body.price,err)\n    chai.assert.equal(mock.findObject.availability,res.body.availability,err)\n    done();\n});",
              "err": {},
              "uuid": "d7c57291-800c-46db-be34-3b4f8805ad8e",
              "parentUUID": "8efc4da5-2a1f-4137-8068-0b590072a9bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the search List including only the test item",
              "fullTitle": "Item Routes Tests Suite should return the search List including only the test item",
              "timedOut": false,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/search/list')\n  .send({search : \"Test Item Name\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length ,err)\n    done();\n});",
              "err": {},
              "uuid": "3753def4-81dd-4e62-8ec0-2751601be1ed",
              "parentUUID": "8efc4da5-2a1f-4137-8068-0b590072a9bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update item details and return success",
              "fullTitle": "Item Routes Tests Suite should update item details and return success",
              "timedOut": false,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "ab7e0a9c-d19d-4b65-96e7-dbd081ab455d",
              "parentUUID": "8efc4da5-2a1f-4137-8068-0b590072a9bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete Item record that was created",
              "fullTitle": "Item Routes Tests Suite should delete Item record that was created",
              "timedOut": false,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({id : \"I-121212_Test\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "bf3d4e90-d00e-4bbd-8f80-66893eaeeaf8",
              "parentUUID": "8efc4da5-2a1f-4137-8068-0b590072a9bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06fef046-ba89-4fb2-b5d4-2997aa8c12a4",
            "19a13fa4-82db-49fe-97cc-2e00652d9fc6",
            "d7c57291-800c-46db-be34-3b4f8805ad8e",
            "3753def4-81dd-4e62-8ec0-2751601be1ed",
            "ab7e0a9c-d19d-4b65-96e7-dbd081ab455d",
            "bf3d4e90-d00e-4bbd-8f80-66893eaeeaf8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1393,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "d0ce0ef5-eb9f-4ed2-be16-c538e1a60013",
          "title": "Order Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\order.tests.js",
          "file": "\\tests\\order.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return Order created message as success",
              "fullTitle": "Order Routes Tests Suite should return Order created message as success",
              "timedOut": false,
              "duration": 251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/create')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "eea7708c-c768-48c4-9dd7-824f80103eb4",
              "parentUUID": "d0ce0ef5-eb9f-4ed2-be16-c538e1a60013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the Order information",
              "fullTitle": "Order Routes Tests Suite should return the Order information",
              "timedOut": false,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({id : \"Test_O-23443933\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.findObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.findObject.total,res.body.total,err)\n    done();\n});",
              "err": {},
              "uuid": "c973a1fc-9cd0-4c74-8bf0-ed67f20b06d6",
              "parentUUID": "d0ce0ef5-eb9f-4ed2-be16-c538e1a60013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return all the Orders of the Test Store",
              "fullTitle": "Order Routes Tests Suite should return all the Orders of the Test Store",
              "timedOut": false,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get')\n  .send({store_email : \"teststore@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length,err)\n    done();\n});",
              "err": {},
              "uuid": "3aff63f2-0e54-4b48-b54f-fe3f3c744e9d",
              "parentUUID": "d0ce0ef5-eb9f-4ed2-be16-c538e1a60013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return all the Orders of the Customer",
              "fullTitle": "Order Routes Tests Suite should return all the Orders of the Customer",
              "timedOut": false,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/user/orders')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length,err)\n    done();\n});",
              "err": {},
              "uuid": "3ee3b198-dccb-4b36-9dbd-9f0e093efc3a",
              "parentUUID": "d0ce0ef5-eb9f-4ed2-be16-c538e1a60013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update order status and return success message",
              "fullTitle": "Order Routes Tests Suite should update order status and return success message",
              "timedOut": false,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/status')\n  .send({id : \"Test_O-23443933\" , status : \"in progress\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "48c3ccc0-8fba-4eda-9dc2-a8dc9ca0946d",
              "parentUUID": "d0ce0ef5-eb9f-4ed2-be16-c538e1a60013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update order details and return success message",
              "fullTitle": "Order Routes Tests Suite should update order details and return success message",
              "timedOut": false,
              "duration": 291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/status')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "99fdd685-5824-4de8-a4f6-f240bca3cdf4",
              "parentUUID": "d0ce0ef5-eb9f-4ed2-be16-c538e1a60013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart record that was created",
              "fullTitle": "Order Routes Tests Suite should delete cart record that was created",
              "timedOut": false,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({id : \"Test_O-23443933\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "6581c2a3-538a-45d4-95bb-ef21c3e27a4d",
              "parentUUID": "d0ce0ef5-eb9f-4ed2-be16-c538e1a60013",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eea7708c-c768-48c4-9dd7-824f80103eb4",
            "c973a1fc-9cd0-4c74-8bf0-ed67f20b06d6",
            "3aff63f2-0e54-4b48-b54f-fe3f3c744e9d",
            "3ee3b198-dccb-4b36-9dbd-9f0e093efc3a",
            "48c3ccc0-8fba-4eda-9dc2-a8dc9ca0946d",
            "99fdd685-5824-4de8-a4f6-f240bca3cdf4",
            "6581c2a3-538a-45d4-95bb-ef21c3e27a4d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1878,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "35892dc5-4f6c-40fb-9348-35bc4cefb536",
          "title": "Vendor Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\vendor.tests.js",
          "file": "\\tests\\vendor.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return Vendor description needs to be atleast 6 letters long",
              "fullTitle": "Vendor Routes Tests Suite should return Vendor description needs to be atleast 6 letters long",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"description\" length must be at least 6 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "c723dcbc-e74d-4d36-8f32-63d3b1ae77ea",
              "parentUUID": "35892dc5-4f6c-40fb-9348-35bc4cefb536",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return vendor created message as success",
              "fullTitle": "Vendor Routes Tests Suite should return vendor created message as success",
              "timedOut": false,
              "duration": 530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "f4f3d7b9-b2ff-4381-943e-889c5ddd7949",
              "parentUUID": "35892dc5-4f6c-40fb-9348-35bc4cefb536",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the vendor information",
              "fullTitle": "Vendor Routes Tests Suite should return the vendor information",
              "timedOut": false,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"teststore@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.vendor_name,res.body.vendor_name,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.description,res.body.description,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    done();\n});",
              "err": {},
              "uuid": "0eef1b54-cbb6-4456-b1a5-3274315c5821",
              "parentUUID": "35892dc5-4f6c-40fb-9348-35bc4cefb536",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should update vendor record that was created",
              "timedOut": false,
              "duration": 560,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "3f8032b3-9ea2-44f1-8555-ac2994dea076",
              "parentUUID": "35892dc5-4f6c-40fb-9348-35bc4cefb536",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should recieve invalid mobile when updating vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should recieve invalid mobile when updating vendor record that was created",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "6a4eddc8-0c7f-443a-80e6-764f0523a2fd",
              "parentUUID": "35892dc5-4f6c-40fb-9348-35bc4cefb536",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should delete vendor record that was created",
              "timedOut": false,
              "duration": 275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"teststore@gmail.com\" , url : \"https://canteen-management-system-nsbm.s3.ap-south-1.amazonaws.com/test_store.png\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "653add00-7505-41a1-88a6-30d4e67e5ec5",
              "parentUUID": "35892dc5-4f6c-40fb-9348-35bc4cefb536",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c723dcbc-e74d-4d36-8f32-63d3b1ae77ea",
            "f4f3d7b9-b2ff-4381-943e-889c5ddd7949",
            "0eef1b54-cbb6-4456-b1a5-3274315c5821",
            "3f8032b3-9ea2-44f1-8555-ac2994dea076",
            "6a4eddc8-0c7f-443a-80e6-764f0523a2fd",
            "653add00-7505-41a1-88a6-30d4e67e5ec5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1635,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}