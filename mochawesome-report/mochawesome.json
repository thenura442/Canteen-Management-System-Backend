{
  "stats": {
    "suites": 7,
    "tests": 49,
    "passes": 49,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-15T06:10:17.230Z",
    "end": "2023-05-15T06:10:34.232Z",
    "duration": 17002,
    "testsRegistered": 49,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "de374fe8-08cc-4ce5-ad4f-5dc27b8288dd",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "daf3c2cc-278d-4db7-9af0-e9496ee4eb6c",
          "title": "Common Routes Tests",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\basic.tests.js",
          "file": "\\tests\\basic.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return server status",
              "fullTitle": "Common Routes Tests should return server status",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get('/')\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
              "err": {},
              "uuid": "55f41c98-dbbf-48c9-96f7-242e72106f65",
              "parentUUID": "daf3c2cc-278d-4db7-9af0-e9496ee4eb6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55f41c98-dbbf-48c9-96f7-242e72106f65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "2e3b3413-d22a-4bf8-9762-c9551c97d633",
          "title": "Cart Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\cart.tests.js",
          "file": "\\tests\\cart.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return cart created message as success",
              "fullTitle": "Cart Routes Tests Suite should return cart created message as success",
              "timedOut": false,
              "duration": 3973,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/create')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "f096545d-22bb-490b-8c98-114a2325f05c",
              "parentUUID": "2e3b3413-d22a-4bf8-9762-c9551c97d633",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the Cart information of the Customer",
              "fullTitle": "Cart Routes Tests Suite should return the Cart information of the Customer",
              "timedOut": false,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get')\n  .send({customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.findObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.findObject.sub_total,res.body.sub_total,err)\n    done();\n});",
              "err": {},
              "uuid": "f936fca5-b895-4e2b-9131-df48696fde60",
              "parentUUID": "2e3b3413-d22a-4bf8-9762-c9551c97d633",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update cart details and return updated cart details",
              "fullTitle": "Cart Routes Tests Suite should update cart details and return updated cart details",
              "timedOut": false,
              "duration": 507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.updateObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.updateObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.updateObject.sub_total,res.body.sub_total,err)\n    done();\n});",
              "err": {},
              "uuid": "9ef4263b-b61a-490d-a2ca-e35635ff850f",
              "parentUUID": "2e3b3413-d22a-4bf8-9762-c9551c97d633",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart item details and return success",
              "fullTitle": "Cart Routes Tests Suite should delete cart item details and return success",
              "timedOut": false,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/item')\n  .send({ id : \"I-AA81881\" , customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "f587994b-a482-47f8-ae61-9042ce6974cd",
              "parentUUID": "2e3b3413-d22a-4bf8-9762-c9551c97d633",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart record that was created",
              "fullTitle": "Cart Routes Tests Suite should delete cart record that was created",
              "timedOut": false,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete')\n  .send({customer_email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "00b26f19-027a-4427-abb1-d129fbeb145a",
              "parentUUID": "2e3b3413-d22a-4bf8-9762-c9551c97d633",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f096545d-22bb-490b-8c98-114a2325f05c",
            "f936fca5-b895-4e2b-9131-df48696fde60",
            "9ef4263b-b61a-490d-a2ca-e35635ff850f",
            "f587994b-a482-47f8-ae61-9042ce6974cd",
            "00b26f19-027a-4427-abb1-d129fbeb145a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5510,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
          "title": "Customer Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\customer.tests.js",
          "file": "\\tests\\customer.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return customer email needs to be valid",
              "fullTitle": "Customer Routes Tests Suite should return customer email needs to be valid",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"email\" must be a valid email',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "c6e26440-8d6e-4841-8227-99f06e25443e",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer created message as success",
              "fullTitle": "Customer Routes Tests Suite should return customer created message as success",
              "timedOut": false,
              "duration": 631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "f5385677-cad2-4141-8999-52ed45233f4b",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email already exists",
              "fullTitle": "Customer Routes Tests Suite should return that email already exists",
              "timedOut": false,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email Already Exists!\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "47ba5c3e-558c-4fcc-81d4-046f840da312",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer login as success",
              "fullTitle": "Customer Routes Tests Suite should return customer login as success",
              "timedOut": false,
              "duration": 334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/mobile')\n  .send({ email : mock.mockLoginObject.email , password : mock.mockLoginObject.password , type : mock.mockLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"tester122@gmail.com\",res.body.email,err)\n    done();\n});",
              "err": {},
              "uuid": "5c065169-1d5d-4fa1-9f7f-8f2094cc0eef",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer login as Incorrect Username or Password",
              "fullTitle": "Customer Routes Tests Suite should return customer login as Incorrect Username or Password",
              "timedOut": false,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/mobile')\n  .send({ email : mock.mockFalseLoginObject.email , password : mock.mockFalseLoginObject.password , type : mock.mockFalseLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email or Password is Incorrect\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "e4a2beff-58be-45ea-b685-dd03d62a9616",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the customer information",
              "fullTitle": "Customer Routes Tests Suite should return the customer information",
              "timedOut": false,
              "duration": 274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.first_name,res.body.first_name,err)\n    chai.assert.equal(mock.findObject.last_name,res.body.last_name,err)\n    chai.assert.equal(mock.findObject.nic,res.body.nic,err)\n    chai.assert.equal(mock.findObject.dob,res.body.dob,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.address,res.body.address,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    done();\n});",
              "err": {},
              "uuid": "d1b07508-8ce3-4073-a458-1f825f113060",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer details and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer details and return success",
              "timedOut": false,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "8ebde631-2201-4d55-968c-9a8f3c0723c9",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email needs to be valid",
              "fullTitle": "Customer Routes Tests Suite should return that email needs to be valid",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "c0586541-7e2f-4787-923b-e9ab16c4be73",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that mobile number needs 10 characters",
              "fullTitle": "Customer Routes Tests Suite should return that mobile number needs 10 characters",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "fcc32475-22d0-480a-bbcd-63aedacf949d",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Mobile and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer Mobile and return success",
              "timedOut": false,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/mobile')\n  .send({ email : \"tester122@gmail.com\" , mobile_no : \"0771193382\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "18ea23ba-86b1-4385-8b01-8ad74e238de2",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Password and return success",
              "fullTitle": "Customer Routes Tests Suite should update customer Password and return success",
              "timedOut": false,
              "duration": 656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/password')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester123\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "0a6cacdd-b8bc-4014-98ce-0d5a6b618619",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer Old Password is not valid",
              "fullTitle": "Customer Routes Tests Suite should return customer Old Password is not valid",
              "timedOut": false,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/password')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester12345\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Please Enter the Valid Old Password\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "018b6ce9-abef-400e-a00b-ddf28af1fd79",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete customer record that was created",
              "fullTitle": "Customer Routes Tests Suite should delete customer record that was created",
              "timedOut": false,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "74d88025-6c14-4642-8e41-b4da5d1a18ff",
              "parentUUID": "c13d7605-bed0-4caf-887d-a7f1ee84bb86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6e26440-8d6e-4841-8227-99f06e25443e",
            "f5385677-cad2-4141-8999-52ed45233f4b",
            "47ba5c3e-558c-4fcc-81d4-046f840da312",
            "5c065169-1d5d-4fa1-9f7f-8f2094cc0eef",
            "e4a2beff-58be-45ea-b685-dd03d62a9616",
            "d1b07508-8ce3-4073-a458-1f825f113060",
            "8ebde631-2201-4d55-968c-9a8f3c0723c9",
            "c0586541-7e2f-4787-923b-e9ab16c4be73",
            "fcc32475-22d0-480a-bbcd-63aedacf949d",
            "18ea23ba-86b1-4385-8b01-8ad74e238de2",
            "0a6cacdd-b8bc-4014-98ce-0d5a6b618619",
            "018b6ce9-abef-400e-a00b-ddf28af1fd79",
            "74d88025-6c14-4642-8e41-b4da5d1a18ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3623,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "40d73278-9d26-410c-84b0-e7ee37b160cb",
          "title": "Employee Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\employee.tests.js",
          "file": "\\tests\\employee.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return customer email needs to be valid",
              "fullTitle": "Employee Routes Tests Suite should return customer email needs to be valid",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"email\" must be a valid email',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "4f3f4048-a4df-4e23-be3d-a4fde1dabc7d",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee created message as success",
              "fullTitle": "Employee Routes Tests Suite should return employee created message as success",
              "timedOut": false,
              "duration": 568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "70d9cf77-6d9d-407a-be9c-aa2989473914",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email already exists",
              "fullTitle": "Employee Routes Tests Suite should return that email already exists",
              "timedOut": false,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email Already Exists!\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "19d20afe-a6ef-403d-9a48-03c538264ece",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee login as success",
              "fullTitle": "Employee Routes Tests Suite should return employee login as success",
              "timedOut": false,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/web')\n  .send({ email : mock.mockLoginObject.email , password : mock.mockLoginObject.password , type : mock.mockLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"tester122@gmail.com\",res.body.email,err)\n    done();\n});",
              "err": {},
              "uuid": "f41d79bf-cbb4-4760-a2d7-d948112c7fa7",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return employee login as Incorrect Username or Password",
              "fullTitle": "Employee Routes Tests Suite should return employee login as Incorrect Username or Password",
              "timedOut": false,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post('/api/auth/login/web')\n  .send({ email : mock.mockFalseLoginObject.email , password : mock.mockFalseLoginObject.password , type : mock.mockFalseLoginObject.type})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Email or Password is Incorrect\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "54cbf784-bcd8-4b13-a946-55bdfdb963c8",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the customer information",
              "fullTitle": "Employee Routes Tests Suite should return the customer information",
              "timedOut": false,
              "duration": 251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.first_name,res.body.first_name,err)\n    chai.assert.equal(mock.findObject.last_name,res.body.last_name,err)\n    chai.assert.equal(mock.findObject.nic,res.body.nic,err)\n    chai.assert.equal(mock.findObject.dob,res.body.dob,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.address,res.body.address,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    chai.assert.equal(mock.findObject.type,res.body.type,err)\n    chai.assert.equal(mock.findObject.vendor,res.body.vendor,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    done();\n});",
              "err": {},
              "uuid": "1a393445-7a21-43be-b718-655771c0fd9c",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer details and return success",
              "fullTitle": "Employee Routes Tests Suite should update customer details and return success",
              "timedOut": false,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "110b7c96-f515-46d3-801e-d18bf645c9a6",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return that email needs to be valid",
              "fullTitle": "Employee Routes Tests Suite should return that email needs to be valid",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "6c2600f7-fb52-46bf-8744-8a60ccaad76d",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update customer Password and return success",
              "fullTitle": "Employee Routes Tests Suite should update customer Password and return success",
              "timedOut": false,
              "duration": 672,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/pass')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester123\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "64240b9d-7299-4e7b-b0cf-348fdf8f888e",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return customer Old Password is not valid",
              "fullTitle": "Employee Routes Tests Suite should return customer Old Password is not valid",
              "timedOut": false,
              "duration": 342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/pass')\n  .send({ email : \"tester122@gmail.com\" , old_password : \"tester12345\" , new_password : \"tester1234\" , retype_new_password : \"tester1234\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"Please Enter the Valid Old Password\",res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "6a2812a2-5fa2-4c81-9ede-6a3b6d464d89",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete customer record that was created",
              "fullTitle": "Employee Routes Tests Suite should delete customer record that was created",
              "timedOut": false,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "31105b48-7ece-4e46-b44f-9a83f26512a9",
              "parentUUID": "40d73278-9d26-410c-84b0-e7ee37b160cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f3f4048-a4df-4e23-be3d-a4fde1dabc7d",
            "70d9cf77-6d9d-407a-be9c-aa2989473914",
            "19d20afe-a6ef-403d-9a48-03c538264ece",
            "f41d79bf-cbb4-4760-a2d7-d948112c7fa7",
            "54cbf784-bcd8-4b13-a946-55bdfdb963c8",
            "1a393445-7a21-43be-b718-655771c0fd9c",
            "110b7c96-f515-46d3-801e-d18bf645c9a6",
            "6c2600f7-fb52-46bf-8744-8a60ccaad76d",
            "64240b9d-7299-4e7b-b0cf-348fdf8f888e",
            "6a2812a2-5fa2-4c81-9ede-6a3b6d464d89",
            "31105b48-7ece-4e46-b44f-9a83f26512a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "7567e89f-b4a7-4b8c-8017-fb8848e12ddc",
          "title": "Item Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\item.tests.js",
          "file": "\\tests\\item.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return item description needs to be atleast 6 letters long",
              "fullTitle": "Item Routes Tests Suite should return item description needs to be atleast 6 letters long",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"description\" length must be at least 6 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "e993cbea-22bb-4aba-8fcc-f61f241051d2",
              "parentUUID": "7567e89f-b4a7-4b8c-8017-fb8848e12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return item created message as success and its ID",
              "fullTitle": "Item Routes Tests Suite should return item created message as success and its ID",
              "timedOut": false,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "8c9fae6c-8f55-427c-9d0d-adfc63d397a8",
              "parentUUID": "7567e89f-b4a7-4b8c-8017-fb8848e12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the item information",
              "fullTitle": "Item Routes Tests Suite should return the item information",
              "timedOut": false,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({id : \"I-121212_Test\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.id,res.body.id,err)\n    chai.assert.equal(mock.findObject.item_name,res.body.item_name,err)\n    chai.assert.equal(mock.findObject.vendor,res.body.vendor,err)\n    chai.assert.equal(mock.findObject.description,res.body.description,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    chai.assert.equal(mock.findObject.type,res.body.type,err)\n    chai.assert.equal(mock.findObject.meal_type,res.body.meal_type,err)\n    chai.assert.equal(mock.findObject.price,res.body.price,err)\n    chai.assert.equal(mock.findObject.availability,res.body.availability,err)\n    done();\n});",
              "err": {},
              "uuid": "b09086fe-30d1-4654-859d-85e95e686757",
              "parentUUID": "7567e89f-b4a7-4b8c-8017-fb8848e12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the search List including only the test item",
              "fullTitle": "Item Routes Tests Suite should return the search List including only the test item",
              "timedOut": false,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/search/list')\n  .send({search : \"Test Item Name\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length ,err)\n    done();\n});",
              "err": {},
              "uuid": "ebfb97aa-01b3-4fc6-aecd-32d70b087db2",
              "parentUUID": "7567e89f-b4a7-4b8c-8017-fb8848e12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update item details and return success",
              "fullTitle": "Item Routes Tests Suite should update item details and return success",
              "timedOut": false,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "32d1aca7-3074-4993-b613-b944758f1332",
              "parentUUID": "7567e89f-b4a7-4b8c-8017-fb8848e12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete Item record that was created",
              "fullTitle": "Item Routes Tests Suite should delete Item record that was created",
              "timedOut": false,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({id : \"I-121212_Test\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "8912f37f-f601-4b8d-97ab-8f41b1b57c78",
              "parentUUID": "7567e89f-b4a7-4b8c-8017-fb8848e12ddc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e993cbea-22bb-4aba-8fcc-f61f241051d2",
            "8c9fae6c-8f55-427c-9d0d-adfc63d397a8",
            "b09086fe-30d1-4654-859d-85e95e686757",
            "ebfb97aa-01b3-4fc6-aecd-32d70b087db2",
            "32d1aca7-3074-4993-b613-b944758f1332",
            "8912f37f-f601-4b8d-97ab-8f41b1b57c78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "8c890397-75e1-4dc5-a33c-92d0978b46b5",
          "title": "Order Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\order.tests.js",
          "file": "\\tests\\order.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return Order created message as success",
              "fullTitle": "Order Routes Tests Suite should return Order created message as success",
              "timedOut": false,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/create')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "a92f5a65-faa7-431b-bd80-fec736798d5f",
              "parentUUID": "8c890397-75e1-4dc5-a33c-92d0978b46b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the Order information",
              "fullTitle": "Order Routes Tests Suite should return the Order information",
              "timedOut": false,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({id : \"Test_O-23443933\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.customer_email,res.body.customer_email,err)\n    chai.assert.equal(mock.findObject.store_email,res.body.store_email,err)\n    chai.assert.equal(mock.findObject.total,res.body.total,err)\n    done();\n});",
              "err": {},
              "uuid": "9b0bcdfa-43b5-4d03-9a1a-f63a696de620",
              "parentUUID": "8c890397-75e1-4dc5-a33c-92d0978b46b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return all the Orders of the Test Store",
              "fullTitle": "Order Routes Tests Suite should return all the Orders of the Test Store",
              "timedOut": false,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get')\n  .send({store_email : \"teststore@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length,err)\n    done();\n});",
              "err": {},
              "uuid": "3bd00b52-ec23-4b5d-a048-a83ef1259220",
              "parentUUID": "8c890397-75e1-4dc5-a33c-92d0978b46b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return all the Orders of the Customer",
              "fullTitle": "Order Routes Tests Suite should return all the Orders of the Customer",
              "timedOut": false,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/user/orders')\n  .send({email : \"tester122@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(1,res.body.length,err)\n    done();\n});",
              "err": {},
              "uuid": "d8ecb3aa-4a4e-4e17-98b2-ebe32b84cca9",
              "parentUUID": "8c890397-75e1-4dc5-a33c-92d0978b46b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update order status and return success message",
              "fullTitle": "Order Routes Tests Suite should update order status and return success message",
              "timedOut": false,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/status')\n  .send({id : \"Test_O-23443933\" , status : \"in progress\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "7ae8bebe-4c9c-42aa-a032-979d503f3f8b",
              "parentUUID": "8c890397-75e1-4dc5-a33c-92d0978b46b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update order details and return success message",
              "fullTitle": "Order Routes Tests Suite should update order details and return success message",
              "timedOut": false,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/status')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "e0c2a18d-ec5d-4e75-b46d-bade6c00a561",
              "parentUUID": "8c890397-75e1-4dc5-a33c-92d0978b46b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete cart record that was created",
              "fullTitle": "Order Routes Tests Suite should delete cart record that was created",
              "timedOut": false,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({id : \"Test_O-23443933\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "680f5cd6-99c9-4edb-b668-6d169cb9d374",
              "parentUUID": "8c890397-75e1-4dc5-a33c-92d0978b46b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a92f5a65-faa7-431b-bd80-fec736798d5f",
            "9b0bcdfa-43b5-4d03-9a1a-f63a696de620",
            "3bd00b52-ec23-4b5d-a048-a83ef1259220",
            "d8ecb3aa-4a4e-4e17-98b2-ebe32b84cca9",
            "7ae8bebe-4c9c-42aa-a032-979d503f3f8b",
            "e0c2a18d-ec5d-4e75-b46d-bade6c00a561",
            "680f5cd6-99c9-4edb-b668-6d169cb9d374"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1752,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "2bacc490-32c3-4ec6-af34-0909d1006047",
          "title": "Vendor Routes Tests Suite",
          "fullFile": "G:\\Respo-Folder\\Visual Studio Code\\Canteen Management System\\Web Application\\express-backend\\tests\\vendor.tests.js",
          "file": "\\tests\\vendor.tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return Vendor description needs to be atleast 6 letters long",
              "fullTitle": "Vendor Routes Tests Suite should return Vendor description needs to be atleast 6 letters long",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"description\" length must be at least 6 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "cfa981e3-0a37-487d-92a7-2b1dbfbdecc9",
              "parentUUID": "2bacc490-32c3-4ec6-af34-0909d1006047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return vendor created message as success",
              "fullTitle": "Vendor Routes Tests Suite should return vendor created message as success",
              "timedOut": false,
              "duration": 496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/register')\n  .send(mock.mockObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "7d9009af-af79-47fa-920e-4bac61456b70",
              "parentUUID": "2bacc490-32c3-4ec6-af34-0909d1006047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the vendor information",
              "fullTitle": "Vendor Routes Tests Suite should return the vendor information",
              "timedOut": false,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/get/id')\n  .send({email : \"teststore@gmail.com\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(mock.findObject.vendor_name,res.body.vendor_name,err)\n    chai.assert.equal(mock.findObject.email,res.body.email,err)\n    chai.assert.equal(mock.findObject.description,res.body.description,err)\n    chai.assert.equal(mock.findObject.url,res.body.url,err)\n    chai.assert.equal(mock.findObject.mobile_no,res.body.mobile_no,err)\n    chai.assert.equal(mock.findObject.access,res.body.access,err)\n    done();\n});",
              "err": {},
              "uuid": "1f7adfac-173e-405a-9a8e-9f895ce49f4e",
              "parentUUID": "2bacc490-32c3-4ec6-af34-0909d1006047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should update vendor record that was created",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "ce366caa-e431-4da6-a9b6-79e802897bd1",
              "parentUUID": "2bacc490-32c3-4ec6-af34-0909d1006047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should recieve invalid mobile when updating vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should recieve invalid mobile when updating vendor record that was created",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/update/id')\n  .send(mock.updateFalseObject)\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal('\"mobile_no\" length must be at least 10 characters long',res.body.Error,err)\n    done();\n});",
              "err": {},
              "uuid": "2fdafc55-d577-4979-a230-c2d6b13688d3",
              "parentUUID": "2bacc490-32c3-4ec6-af34-0909d1006047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete vendor record that was created",
              "fullTitle": "Vendor Routes Tests Suite should delete vendor record that was created",
              "timedOut": false,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(api+'/delete/id')\n  .send({email : \"teststore@gmail.com\" , url : \"https://canteen-management-system-nsbm.s3.ap-south-1.amazonaws.com/test_store.png\"})\n  .end((err, res) => {\n    res.should.have.status(200);\n    chai.assert.equal(\"success\",res.body.message,err)\n    done();\n});",
              "err": {},
              "uuid": "eaceda22-5926-493f-88b8-1b56cc5e7047",
              "parentUUID": "2bacc490-32c3-4ec6-af34-0909d1006047",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfa981e3-0a37-487d-92a7-2b1dbfbdecc9",
            "7d9009af-af79-47fa-920e-4bac61456b70",
            "1f7adfac-173e-405a-9a8e-9f895ce49f4e",
            "ce366caa-e431-4da6-a9b6-79e802897bd1",
            "2fdafc55-d577-4979-a230-c2d6b13688d3",
            "eaceda22-5926-493f-88b8-1b56cc5e7047"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1509,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}